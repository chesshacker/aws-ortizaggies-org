AWSTemplateFormatVersion: 2010-09-09
Description: S3 bucket to store organization CloudTrail
Parameters:
  BucketName:
    Description: The name of the bucket to store CloudTrail
    Type: String
    Default: ortizaggies-org-cloudtrail
  OrgID:
    Description: Organization ID
    Type: String
    Default: o-jubqj38nma
Resources:
  CloudTrailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketName: !Ref BucketName
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: DeleteContentAfter30Days
            Status: Enabled
            ExpirationInDays: 30
  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: Retain
    Properties:
      Bucket: !Ref CloudTrailBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub "arn:aws:s3:::${BucketName}"
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub "arn:aws:s3:::${BucketName}/AWSLogs/*"
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
          - Sid: AdminRead
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/Admin"
            Action:
              - s3:Get*
              - s3:List*
            Resource: !Sub "arn:aws:s3:::${BucketName}/*"
          - Sid: CrossAccountListBucket
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"
            Condition:
              StringEquals:
                "aws:PrincipalOrgID":
                  - !Ref OrgID
              StringLikeIfExists:
                "s3:prefix": !Sub "AWSLogs/${OrgID}/${!aws:PrincipalAccount}/*"
              ArnLike:
                "aws:PrincipalArn":
                  - arn:aws:iam::*:role/Admin
                  - arn:aws:iam::*:role/AccessAnalyzerMonitorServiceRole
          - Sid: CrossAccountGetObject
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - s3:GetObject
            Resource: !Sub "arn:aws:s3:::${BucketName}/AWSLogs/${OrgID}/${!aws:PrincipalAccount}/*"
            Condition:
              StringEquals:
                "aws:PrincipalOrgID":
                  - !Ref OrgID
              ArnLike:
                "aws:PrincipalArn":
                  - arn:aws:iam::*:role/Admin
                  - arn:aws:iam::*:role/AccessAnalyzerMonitorServiceRole
